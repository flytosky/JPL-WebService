#!/usr/local/bin/octave -q

arg_list = argv();
printf ("program name: %s\n", program_name());

narg = length(arg_list);

if narg < 2
  error('Insufficient argument, need a model and a variable name!'); 
end
modelName = lower(arg_list{1});
printf ("modelName: %s\n", modelName);
varName = arg_list{2};
printf ("varName: %s\n", varName);

startTime = struct('year', 1980, 'month', 1);
stopTime = struct('year', 2004, 'month', 12);

printf("1. %s\n", arg_list{1})
printf("2. %s\n", arg_list{2})

if narg > 2
  startTimeStr = arg_list{3};
  printf ("startTimeStr: %s\n", startTimeStr);
  startTime = struct('year', str2num(startTimeStr(1:4)), 'month', str2num(startTimeStr(5:6)));
  printf("3. %s\n", arg_list{3})
end

if narg > 3
  stopTimeStr = arg_list{4};
  printf ("stopTimeStr: %s\n", stopTimeStr);
  stopTime = struct('year', str2num(stopTimeStr(1:4)), 'month', str2num(stopTimeStr(5:6)));
  printf("4. %s\n", arg_list{4})
end

lonRange = [0, 360];

if narg > 4
  printf ("lonRange: %s\n", arg_list{5});
  lonRange = str2num(arg_list{5});
  printf ("lonRange: %f\n", lonRange)
  printf("5. %s\n", arg_list{5})
end

latRange = 90*[-1,1];

if narg > 5
  printf ("latRange: %s\n", arg_list{6});
  latRange = str2num(arg_list{6});
  printf("6. %s\n", arg_list{6})
end

monthIdx = 1:12;

if narg > 6
  monthIdx = str2num(arg_list{7});
  printf("7. %s\n", arg_list{7})
end

output_dir = pwd();

if narg > 7
  output_dir = arg_list{8};
  printf("8. %s\n", arg_list{8})
end

outputData = false;

if nargin > 8
  outputData = arg_list{9};
  printf("9. %s\n", arg_list{9})
end


[center,model] = strtok(modelName, '_');
model = model(2:end); % get rid of '_'

dataDir = ['/export/data1/data/cmip5/'  center '/' model '/']; 

dataFiles = dir([dataDir '/' varName '_*.nc']);

nDataFiles = length(dataFiles);

if nDataFiles < 1
  error(['Variable: ' varName ' for data source: ' modelName ' not found!']); 
end

dataFileFullPath = [];
idx = 1;
for ii = 1:nDataFiles
  thisFile = [dataDir '/' dataFiles(ii).name];
  if dataFileRelevant(thisFile, startTime, stopTime)
    dataFileFullPath{idx} = thisFile;
    idx = idx + 1;
  end
end

figFile = [modelName '_' varName '_' date2Str(startTime) '_' date2Str(stopTime) '_' seasonStr(monthIdx) '.jpeg'];
figFilePath = [output_dir '/' figFile];
printf("figFile: %s\n", figFile)
printf("figFilePath: %s\n", figFilePath)
displayTwoDimClimatologyGen(dataFileFullPath, figFilePath, varName, startTime, stopTime, lonRange, latRange, monthIdx, outputData);
title([varName ' climatology for ' modelName]);

